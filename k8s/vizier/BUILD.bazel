# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "container_push")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bazel:images.bzl", "image_map_with_bundle_version", "image_replacements")
load("//bazel:kustomize.bzl", "kustomize_build")

package(default_visibility = ["//visibility:public"])

VIZIER_IMAGE_MAP = {
    "gcr.io/pixie-oss/pixie-dev/vizier/cert_provisioner_image": "//src/utils/cert_provisioner:cert_provisioner_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/cloud_connector_server_image": "//src/vizier/services/cloud_connector:cloud_connector_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/kelvin_image": "//src/vizier/services/agent/kelvin:kelvin_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/metadata_server_image": "//src/vizier/services/metadata:metadata_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/pem_image": "//src/vizier/services/agent/pem:pem_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/query_broker_server_image": "//src/vizier/services/query_broker:query_broker_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/vizier_updater_image": "//src/utils/pixie_updater:vizier_updater_image",
}

public_image_replacement = {"gcr.io/pixie-oss/pixie-dev": "gcr.io/pixie-oss/pixie-prod"}

dev_image_replacement = {"gcr.io/pixie-oss/pixie-dev": "$(DEV_VIZIER_IMAGE_PREFIX)"}

filegroup(
    name = "etcd_base",
    srcs = glob(
        [
            "base/**/*.yaml",
            "bootstrap/**/*.yaml",
            "etcd_metadata/**/*.yaml",
            "pem/**/*.yaml",
        ],
        exclude = [
            "etcd_metadata/kustomization.yaml",
            "etcd_metadata/autopilot/**",
            "persistent_metadata/**",
        ],
    ),
)

filegroup(
    name = "etcd_autopilot",
    srcs = glob(
        [
            "base/**/*.yaml",
            "bootstrap/**/*.yaml",
            "etcd_metadata/**/*.yaml",
            "pem/**/*.yaml",
        ],
        exclude = [
            "etcd_metadata/autopilot/kustomization.yaml",
            "persistent_metadata/**",
        ],
    ),
)

filegroup(
    name = "persistent_base",
    srcs = glob(
        [
            "base/**/*.yaml",
            "bootstrap/**/*.yaml",
            "persistent_metadata/**/*.yaml",
            "pem/**/*.yaml",
        ],
        exclude = [
            "persistent_metadata/kustomization.yaml",
            "persistent_metadata/autopilot/**",
            "etcd_metadata/**",
        ],
    ),
)

filegroup(
    name = "persistent_autopilot",
    srcs = glob(
        [
            "base/**/*.yaml",
            "bootstrap/**/*.yaml",
            "persistent_metadata/**/*.yaml",
            "pem/**/*.yaml",
        ],
        exclude = [
            "persistent_metadata/autopilot/kustomization.yaml",
            "etcd_metadata/**",
        ],
    ),
)

kustomize_build(
    name = "public_etcd",
    srcs = [":etcd_base"],
    kustomization = "etcd_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

kustomize_build(
    name = "private_etcd",
    srcs = [":etcd_base"],
    kustomization = "etcd_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

kustomize_build(
    name = "dev_etcd",
    srcs = [":etcd_base"],
    kustomization = "etcd_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

kustomize_build(
    name = "public_etcd_autopilot",
    srcs = [":etcd_autopilot"],
    kustomization = "etcd_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

kustomize_build(
    name = "private_etcd_autopilot",
    srcs = [":etcd_autopilot"],
    kustomization = "etcd_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

kustomize_build(
    name = "dev_etcd_autopilot",
    srcs = [":etcd_autopilot"],
    kustomization = "etcd_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

kustomize_build(
    name = "public_persist",
    srcs = [":persistent_base"],
    kustomization = "persistent_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

kustomize_build(
    name = "private_persist",
    srcs = [":persistent_base"],
    kustomization = "persistent_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

kustomize_build(
    name = "dev_persist",
    srcs = [":persistent_base"],
    kustomization = "persistent_metadata/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

kustomize_build(
    name = "public_persist_autopilot",
    srcs = [":persistent_autopilot"],
    kustomization = "persistent_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

kustomize_build(
    name = "private_persist_autopilot",
    srcs = [":persistent_autopilot"],
    kustomization = "persistent_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

kustomize_build(
    name = "dev_persist_autopilot",
    srcs = [":persistent_autopilot"],
    kustomization = "persistent_metadata/autopilot/kustomization.yaml",
    replacements = image_replacements(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

container_bundle(
    name = "private_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

container_bundle(
    name = "public_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

container_bundle(
    name = "dev_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

container_push(
    name = "vizier_images_push",
    bundle = select({
        ":dev": ":dev_vizier_images_bundle",
        ":public": ":public_vizier_images_bundle",
        "//conditions:default": ":private_vizier_images_bundle",
    }),
    format = "Docker",
)

bool_flag(
    name = "use_dev_vizier_images",
    build_setting_default = False,
)

config_setting(
    name = "dev",
    flag_values = {":use_dev_vizier_images": "True"},
)

config_setting(
    name = "public",
    values = {"define": "public=True"},
)

genrule(
    name = "vizier_etcd_image_list",
    srcs = select({
        ":dev": [
            ":dev_etcd",
        ],
        ":public": [
            ":public_etcd",
        ],
        "//conditions:default": [
            ":private_etcd",
        ],
    }) + [
        "//k8s/vizier_deps:nats_prod",
        "//k8s/vizier_deps:etcd_prod",
    ],
    outs = ["vizier_etcd_image_list.txt"],
    cmd = """
    yq e '.. | .image? | select(.)' -o=json $(SRCS) | jq 'strings' | sort | uniq > $@
    """,
)

genrule(
    name = "vizier_image_list",
    srcs = select({
        ":dev": [
            ":dev_persist",
        ],
        ":public": [
            ":public_persist",
        ],
        "//conditions:default": [
            ":private_persist",
        ],
    }) + [
        "//k8s/vizier_deps:nats_prod",
    ],
    outs = ["vizier_image_list.txt"],
    cmd = """
    yq e '.. | .image? | select(.)' -o=json $(SRCS) | jq 'strings' | sort | uniq > $@
    """,
)

pkg_tar(
    name = "vizier_yamls",
    srcs =
        select({
            ":dev": [
                ":dev_etcd",
                ":dev_persist",
                ":dev_etcd_autopilot",
                ":dev_persist_autopilot",
            ],
            ":public": [
                ":public_etcd",
                ":public_persist",
                ":public_etcd_autopilot",
                ":public_persist_autopilot",
            ],
            "//conditions:default": [
                ":private_etcd",
                ":private_persist",
                ":private_etcd_autopilot",
                ":private_persist_autopilot",
            ],
        }) + [
            "//k8s/vizier_deps:nats_prod",
            "//k8s/vizier_deps:etcd_prod",
            ":vizier_etcd_image_list",
            ":vizier_image_list",
            "public/secrets.yaml",
        ],
    package_dir = "/yamls",
    remap_paths = {
        "/vizier/dev_etcd.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/dev_etcd_autopilot.yaml": "vizier/vizier_etcd_metadata_autopilot_prod.yaml",
        "/vizier/dev_persist.yaml": "vizier/vizier_metadata_persist_prod.yaml",
        "/vizier/dev_persist_autopilot.yaml": "vizier/vizier_metadata_persist_autopilot_prod.yaml",
        "/vizier/private_etcd.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/private_etcd_autopilot.yaml": "vizier/vizier_etcd_metadata_autopilot_prod.yaml",
        "/vizier/private_persist.yaml": "vizier/vizier_metadata_persist_prod.yaml",
        "/vizier/private_persist_autopilot.yaml": "vizier/vizier_metadata_persist_autopilot_prod.yaml",
        "/vizier/public/secrets.yaml": "vizier/secrets.yaml",
        "/vizier/public_etcd.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/public_etcd_autopilot.yaml": "vizier/vizier_etcd_metadata_autopilot_prod.yaml",
        "/vizier/public_persist.yaml": "vizier/vizier_metadata_persist_prod.yaml",
        "/vizier/public_persist_autopilot.yaml": "vizier/vizier_metadata_persist_autopilot_prod.yaml",
        "/vizier/vizier_etcd_image_list.txt": "images/vizier_etcd_image_list.txt",
        "/vizier/vizier_image_list.txt": "images/vizier_image_list.txt",
    },
    strip_prefix = "/k8s",
)
